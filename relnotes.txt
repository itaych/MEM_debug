MEM_debug Release Notes
-----------------------
v1.0.6, 20190415
----------------
* fixed "mutex recursion error" message that appeared occasionally. It was caused by access to a thread local counter after the thread had exited. Per-thread statistics now require c++11.
* added global count of total malloc/free calls, printed at program exit summary.
* nicer output of mem_debug_show_leak_list, quoted string buffers now have whitespaces escaped.
* MD_LOG_* macros (for calling an external logger, or printf by default) are no longer called from a critical section, so they may allocate memory if desired.

v1.0.5, 20181220
----------------
* mem_debug_clear_leak_list now optionally restarts allocation serial numbers from 0. When looking for a leak this is helpful for finding patterns in leaking allocations.
* mem_debug_abort_on_allocation now accepts an optional size parameter. If used, abort will only occur if both serial number and allocation size match the request.
* fixed a bug where mem_debug_total_alloced_bytes would return wrong values for thread-scope memory usage, in case memory allocated by this thread has been freed by a different thread.

v1.0.4, 20181007
----------------
* added is_global option to mem_debug_total_alloced_bytes to allow checking memory usage of the current thread.
* in mem_debug_show_leak_list, usage of FLOG with a very long line could cause a memory allocation when the mem_debug mutex is locked. Use safe_print_string instead for displaying memory leak details.

v1.0.3, 20170927
----------------
* mem_debug_total_alloced_bytes adds option to return peak amount of memory allocated.
* output errors occurring during heap operations to stderr, not stdout.

v1.0.2, 20170314
----------------
* Changed mem_debug_check_ptr to accept const pointers.

v1.0.1, 20151210
----------------
* Added mem_debug_check_ptr function.
* MEM_DEBUG_THREAD_CHECK did not behave as advertised.
* Bugfix: Possible errors if prefix or suffix size were set to zero.

v1.0.0, 20151128
----------------
* Initial release
